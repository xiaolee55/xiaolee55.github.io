(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{205:function(t,e,T){"use strict";T.r(e);var o=T(0),v=Object(o.a)({},(function(){var t=this,e=t.$createElement,T=t._self._c||e;return T("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[T("blockquote",[T("p",[t._v("《图解HTTP》总结第一篇")])]),t._v(" "),T("h1",{attrs:{id:"告知服务器意图的-http-方法"}},[T("a",{staticClass:"header-anchor",attrs:{href:"#告知服务器意图的-http-方法"}},[t._v("#")]),t._v(" 告知服务器意图的 HTTP 方法:")]),t._v(" "),T("blockquote",[T("p",[t._v("GET ：获取资源")])]),t._v(" "),T("blockquote",[T("p",[t._v("POST：传输实体主体")])]),t._v(" "),T("blockquote",[T("p",[t._v("PUT：传输文件")])]),t._v(" "),T("p",[t._v("PUT 方法用来传输文件。就像 FTP 协议的文件上传一样，要求在请 求报文的主体中包含文件内容，然后保存到请求 URI 指定的位置。\n但是，鉴于 HTTP/1.1 的 PUT 方法自身不带验证机制，任何人都可以 上传文件 , 存在安全性问题，因此一般的 Web 网站不使用该方法。\n若配合 Web 应用程序的验证机制，或架构设计采用 REST（REpresentational State Transfer，表征状态转移）标准的同类 Web 网站，\n就可能会开放使用 PUT 方法。")]),t._v(" "),T("blockquote",[T("p",[t._v("HEAD：获得报文首部")])]),t._v(" "),T("p",[t._v("HEAD 方法和 GET 方法一样，只是不返回报文主体部分。用于确认 URI 的有效性及资源更新的日期时间等。")]),t._v(" "),T("blockquote",[T("p",[t._v("DELETE：删除文件 DELETE 方法用来删除文件，是与 PUT 相反的方法。")])]),t._v(" "),T("p",[t._v("DELETE 方法按请求 URI 删除指定的资源。 但是，HTTP/1.1 的 DELETE 方法本身和 PUT 方法一样不带验证机制，\n所以一般的 Web 网站也不使用 DELETE 方法。当配合 Web 应用 程序的验证机制，或遵守 REST 标准时还是有可能会开放使用的。")]),t._v(" "),T("blockquote",[T("p",[t._v("OPTIONS：询问支持的方法")])]),t._v(" "),T("p",[t._v("OPTIONS 方法用来查询针对请求 URI 指定的资源支持的方法。")]),t._v(" "),T("blockquote",[T("p",[t._v("TRACE：追踪路径")])]),t._v(" "),T("p",[t._v("客户端通过 TRACE 方法可以查询发送出去的请求是怎样被加工修改 / 篡改的。\n这是因为，请求想要连接到源目标服务器可能会通过代理 中转，TRACE 方法就是用来确认连接过程中发生的一系列操作。\n但是，TRACE 方法本来就不怎么常用，再加上它容易引发 XST（Cross-Site Tracing，跨站追踪）攻击，通常就更不会用到了。")]),t._v(" "),T("blockquote",[T("p",[t._v("CONNECT：要求用隧道协议连接代理")])]),t._v(" "),T("p",[t._v("CONNECT 方法要求在与代理服务器通信时建立隧道，实现用隧道协议进行TCP 通信。\n主要使用 SSL（Secure Sockets Layer，安全套接 层）和 TLS（Transport Layer Security，传输层安全）\n协议把通信内容加密后经网络隧道传输。")])])}),[],!1,null,null,null);e.default=v.exports}}]);