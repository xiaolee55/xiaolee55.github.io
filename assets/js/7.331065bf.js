(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{216:function(t,s,a){"use strict";a.r(s);var n=a(0),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js中的事件循环（event-loop）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js中的事件循环（event-loop）"}},[t._v("#")]),t._v(" JS中的事件循环（Event Loop）")]),t._v(" "),a("h2",{attrs:{id:"事件循环是什么，为什么需要事件循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环是什么，为什么需要事件循环"}},[t._v("#")]),t._v(" 事件循环是什么，为什么需要事件循环")]),t._v(" "),a("p",[t._v("简单来书，Event Loop是js实现异步的一种方法，也是js的执行机制。众所周知JS是一门单线程的语言，所以本身只能执行同步代码，Event Loop就是为JS提供异步能力而生。至于JS为什么是单线程的，事出有因，想一下如果JS多线程，两个线程一个删除DOM，一个在同一个DOM上删除结点，那该以哪个为准？")]),t._v(" "),a("h2",{attrs:{id:"为了理解事件循环，需要了解哪些相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为了理解事件循环，需要了解哪些相关概念"}},[t._v("#")]),t._v(" 为了理解事件循环，需要了解哪些相关概念")]),t._v(" "),a("ul",[a("li",[t._v("任务（task）")]),t._v(" "),a("li",[t._v("执行栈（run stack，也叫调用栈）")]),t._v(" "),a("li",[t._v("主线程（main process）")]),t._v(" "),a("li",[t._v("任务队列（task queue,有些文章也叫事件队列）")]),t._v(" "),a("li",[t._v("事件表（Event Table）")])]),t._v(" "),a("p",[t._v("上面这几个概念在下文会频繁使用，所以一个个介绍一下。\n"),a("img",{attrs:{src:"https://i.loli.net/2019/12/12/dEfpR7ujPZAJY2X.png",alt:"image.png"}}),a("strong",[t._v("（图片出处忘记了，图中的WebAPI可以理解为本文提到的事件表）")])]),t._v(" "),a("p",[a("strong",[t._v("任务")]),t._v("：任务又分为同步任务和异步任务，每个任务进入执行栈之后会被引擎判断为同步任务OR异步任务，同步任务会被主线程立刻执行，异步任务则会被挂起至事件表，等待合适的时机进入任务队列并执行。")]),t._v(" "),a("p",[a("strong",[t._v("执行栈")]),t._v("：每个任务都会放至执行栈中执行，我们都知道栈是一种先进后出的数据结构，所以在栈顶的任务会被先执行，执行结束则被弹出栈。")]),t._v(" "),a("p",[a("strong",[t._v("主线程")]),t._v("：主线程首先会将同步任务执行完，再去读取任务队列中的队头，并将任务队列中的任务一一执行（执行一个任务的过程中不允许其他任务中断）。")]),t._v(" "),a("p",[a("strong",[t._v("任务队列")]),t._v("：任务队列即是用于放置即将执行的异步任务的，任务又分为宏任务和微任务。队列是一种先进先出的数据结构，所以最早加入任务队列的异步任务也会被最早放在队首执行。")]),t._v(" "),a("p",[a("strong",[t._v("事件表")]),t._v("：这个概念在很多文章会淡掉，导致我一度以为异步任务会直接进入任务队列，但实际不是这样的。JS引擎是单线程的，并不代表其执行环境也是单线程的（执行环境包括浏览器，node.js等），事实上浏览器包括多个进程，比如GUI线程（渲染UI），定时器线程（setTimeout。setInterval等），事件触发线程（如用户点击事件等），网络请求线程（如ajax等）。因为这些本身和事件循环关系不大，所以我们将他们统称为事件表，即我们可以理解为挂起的异步任务会存放在事件表中，等到合适的时机再从事件表加入任务队列等待执行（比如setTimeout有100ms延迟，这100ms内它就是存在于事件表的，100ms后再加入任务队列）。")]),t._v(" "),a("h2",{attrs:{id:"细分宏任务（macro-task）和微任务（micro-task）"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#细分宏任务（macro-task）和微任务（micro-task）"}},[t._v("#")]),t._v(" 细分宏任务（macro-task）和微任务（micro-task）")]),t._v(" "),a("h3",{attrs:{id:"宏任务微任务都有哪些"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#宏任务微任务都有哪些"}},[t._v("#")]),t._v(" 宏任务微任务都有哪些")]),t._v(" "),a("p",[a("strong",[t._v("宏任务")]),t._v("：Script（即script标签内的整体代码），触发的事件（点击，键盘等），网络事件（收发HTTP请求等），定时器延时器，UI渲染等都属于宏任务。")]),t._v(" "),a("p",[a("strong",[t._v("微任务")]),t._v("：Promise中的回调任务（then，catch），注意：new Promise()本身并不属于异步任务，更不会是微任务，只是他的回调任务才是微任务，下面会有例子讲解。除了这个，还有node中的process.nextTick也属于微任务")]),t._v(" "),a("p",[t._v("既然分了宏任务和微任务，自然任务队列也就分为宏任务队列和微任务队列。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("在每次事件循环中都会执行一个宏任务，以及所有的微任务")]),t._v("。")])]),t._v(" "),a("p",[t._v("也就是说，一次循环，宏任务只允许执行一个，宏任务队列中的其他队列要等待微任务执行完成，而微任务队列中的所有任务都要执行完。每次执行完之后，浏览器可以选择是否重新渲染UI。")]),t._v(" "),a("h2",{attrs:{id:"事件循环的完整过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事件循环的完整过程"}},[t._v("#")]),t._v(" 事件循环的完整过程")]),t._v(" "),a("p",[t._v("我们通过一份代码实例来剖析整个过程(代码例子来自https://juejin.im/post/59e85eebf265da430d571f89#comment)")]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("，"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("p",[t._v("首先会从头开始执行整个JS代码，也就上面提到的宏任务中的“Script”，所以第一个毫无疑问会输出 "),a("code",[t._v("1")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Script")]),t._v(" "),a("td"),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("然后接着往下看，到了第一个"),a("code",[t._v("setimeOut")]),t._v("，识别为异步代码，则将其放入宏任务队列（实际上根据上面的介绍，我们知道它会先挂载至定时器线程，在事件列表中等待加入任务队列的时机（本例中是100ms后加入任务队列等待执行））。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Script")]),t._v(" "),a("td",[t._v("setTimeout")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("接着继续往下执行到"),a("code",[t._v("process.nextTick()")]),t._v("，是微任务，则加入到微任务队列等待执行，继续往下执行到"),a("code",[t._v("new Promise()")]),t._v("，将里面的同步代码"),a("code",[t._v("console.log('7')")]),t._v("执行，并输出"),a("code",[t._v("7")]),t._v("而"),a("code",[t._v("then")]),t._v("中的代码则会放到微任务队列中。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Script")]),t._v(" "),a("td",[t._v("setTimeout")]),t._v(" "),a("td",[t._v("process.nextTick(); then()")])])])]),t._v(" "),a("p",[t._v("继续往下到第二个定时器，和第一个同理，挂起至定时器线程并等待时机加入任务队列。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Script")]),t._v(" "),a("td",[t._v("setTimeout ;setTimeout")]),t._v(" "),a("td",[t._v("process.nextTick(); then()")])])])]),t._v(" "),a("p",[t._v("至此为之，我们可以看到同步代码全部执行完成，事实上上面说的每一步都可以理解为同步任务，包括直接输出1，执行new Promise()，"),a("strong",[t._v("甚至将异步任务挂起这件事本身，也是一个同步任务")]),t._v("。")]),t._v(" "),a("p",[t._v("Script代码此时已执行完，接下来则应该进入微任务的执行，上面的步骤我们可以知道目前微任务队列中有两个任务，即"),a("code",[t._v("process.nextTick()")]),t._v("和"),a("code",[t._v("then")]),t._v(",按照上面所说的，微任务在一轮事件循环中要全部执行完，所以这里依次输出"),a("code",[t._v("6")]),t._v(","),a("code",[t._v("8")]),t._v("，到此第一轮事件循环结束，控制台输出"),a("code",[t._v("1,7,6,8")]),t._v("。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("process.nextTick()")]),t._v(" "),a("td",[t._v("setTimeout ;setTimeout")]),t._v(" "),a("td",[t._v("then()")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("then()")]),t._v(" "),a("td",[t._v("setTimeout ;setTimeout")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("接下来主进程又会到宏任务队列的队首获取事件，即第一个定时器加入执行栈，里边代码按顺序执行，因此先输出"),a("code",[t._v("2")]),t._v("，"),a("code",[t._v("process.nextTick")]),t._v("放至微任务队列，"),a("code",[t._v("new Promise()")]),t._v("执行输出"),a("code",[t._v("4")]),t._v("，到此宏任务执行完，微任务依次进入执行栈，依次输出"),a("code",[t._v("3,5")]),t._v("，所以第二轮输出为"),a("code",[t._v("2,4,3,5")]),t._v("，本轮循环结束，进入下一轮循环。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("setTimeout")]),t._v(" "),a("td",[t._v("setTimeout")]),t._v(" "),a("td",[t._v("process.nextTick()")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("process.nextTick()")]),t._v(" "),a("td",[t._v("setTimeout")]),t._v(" "),a("td")])])]),t._v(" "),a("p",[t._v("即进第二个定时器进入执行栈由主线程执行，过程和前两轮无异，依次输出"),a("code",[t._v("9,11,10,12")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("run stack")]),t._v(" "),a("th",[t._v("macro-task")]),t._v(" "),a("th",[t._v("micro-task")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("setTimeout")]),t._v(" "),a("td"),t._v(" "),a("td",[t._v("then()")])])])]),t._v(" "),a("p",[t._v("所以本例子的输出完整顺序为"),a("code",[t._v("1，7，6，8，2，4，3，5，9，11，10，12")]),t._v("，")]),t._v(" "),a("blockquote",[a("p",[t._v("注意：事件循环在不同环境的实现可能不同，本例子运行于Chrome50环境。")])]),t._v(" "),a("h2",{attrs:{id:"参考文章"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考文章"}},[t._v("#")]),t._v(" 参考文章")]),t._v(" "),a("p",[t._v("https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\nhttps://juejin.im/post/59e85eebf265da430d571f89#comment")])])}),[],!1,null,null,null);s.default=e.exports}}]);